模式要点：

    将能够处理同一类请求的对象连成一条链，使这些对象都有机会处理请求，所提交的请求沿着链传递。从而避免请求的发送者和接受者之间的耦合关系。
链上的对象逐个判断是否有能力处理该请求，如果能则就处理，如果不能，则传给链上的下一个对象。直到有一个对象处理它为止。

应用场景：
    Java的异常机制就是一个责任链模式，一个try可以对应多个cathc。如果某一个catch不匹配，则跳到下一个catch中

    JavaScript语言中的事件的冒泡和捕获机制

    Servlet开发中，过滤器的链式处理

    Struts2中，拦截器的调用也是典型的责任链模式

参考：
    http://www.cnblogs.com/cxxjohnson/p/6403849.html
