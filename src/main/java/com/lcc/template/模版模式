模式要点：

    定义一个操作中的算法骨架，而将一些步骤延迟到子类中。模板方法使得子类可以不改变一个算法的结构即可重定义该算法的某些特定步骤。
核心：处理某个流程的代码已经都具备，但是其中某个节点的代码暂时不能确定。因此，我们采用工厂方法模式，将这个节点的代码实现转移给子
类完成。即：处理步骤在父类中定义好，具体的实现延迟到子类中定义。说白了，就是将一些相同操作的代码，封装成一个算法的骨架。核心的部分留在子类中操作，在父类中只把那些骨架做好。

应用场景：

    数据库访问的封装

    Junit单元测试

    servlet中关于doGet/doPost方法的调用

    Hibernate中模板程序

    spring中JDBCTemplate，HibernateTemplate等等

参考：
    http://www.cnblogs.com/cxxjohnson/p/6403935.html
