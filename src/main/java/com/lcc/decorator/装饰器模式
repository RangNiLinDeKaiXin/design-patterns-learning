装饰器模式要点：
    装饰模式降低系统的耦合度，可以动态的增加或删除对象的职责，并使得需要装饰的具体构建类和具体装饰类可以独立变化
以便增加新的具体构建类和具体装饰类。

优点：
    扩展功能强，相比继承来说更灵活。继承的话会导致子类个数增加。而装饰者模式不会出现这种情况。

    可以对一个对象进行多次装饰，创造出不同行为的组合，得到功能更加强大的对象。

    具体构建类和具体装饰类可以独立变化，用户可以根据需要自己增加新的构件子类和具体装饰类。

缺点：
    产生很多小对象，大量小对象会占据内存。一定程度上影响了性能。

    装饰模式易于出错，调试排查比较麻烦。

应用场景：
    IO中输入流和输出流

    Swing包中图形界面构件功能

    Servlet API中提供了一个request对象的Decorator设计模式的默认实现类HttpServletRequestWrapper,增强了request对象的功能。

    Struts2中，request，response，session对象的处理。


参考：
    http://www.cnblogs.com/cxxjohnson/p/6403846.html
